{"ast":null,"code":"var _jsxFileName = \"/home/alyona/alyona-diplom/src/pages/Anketa/AnketaPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Divider, Form, notification } from \"antd\";\nimport ProjectForm from \"./components/ProjectForm\";\nimport Questions from \"./components/Questions\";\nimport { StyledActionsRow } from \"./AnketaPage.styled\";\nimport { requestPostProject } from \"../../api/fetchers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnketaPage = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [api, contextHolder] = notification.useNotification();\n  const [form] = Form.useForm();\n  const onSubmit = values => {\n    setLoading(true);\n    return requestPostProject({\n      name: Date.now().toString(),\n      userId: 2,\n      packages: values.packages.split(\",\").map(item => ({\n        name: item\n      })),\n      ecosystem: values.ecosystem,\n      questuinnaire: Object.entries(values.questions).map(_ref => {\n        let [key, value] = _ref;\n        return {\n          questionId: Number(key),\n          answerId: value\n        };\n      })\n    }).then(() => {\n      form.resetFields();\n    }).catch(() => {\n      api.error({\n        message: \"Error\",\n        description: \"Something went wrong\"\n      });\n    }).finally(() => setLoading(false));\n  };\n  const handleReset = () => {\n    form.resetFields();\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    layout: \"vertical\",\n    form: form,\n    scrollToFirstError: true,\n    onFinish: onSubmit,\n    children: [contextHolder, /*#__PURE__*/_jsxDEV(ProjectForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Questions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledActionsRow, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        htmlType: \"submit\",\n        type: \"primary\",\n        loading: loading,\n        children: \"Submit Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleReset,\n        children: \"Reset Fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(AnketaPage, \"sMGfQyEabQmlERMtokuR5tKxMB4=\", false, function () {\n  return [notification.useNotification, Form.useForm];\n});\n_c = AnketaPage;\nexport default AnketaPage;\nvar _c;\n$RefreshReg$(_c, \"AnketaPage\");","map":{"version":3,"names":["React","useState","Button","Divider","Form","notification","ProjectForm","Questions","StyledActionsRow","requestPostProject","jsxDEV","_jsxDEV","AnketaPage","_s","loading","setLoading","api","contextHolder","useNotification","form","useForm","onSubmit","values","name","Date","now","toString","userId","packages","split","map","item","ecosystem","questuinnaire","Object","entries","questions","_ref","key","value","questionId","Number","answerId","then","resetFields","catch","error","message","description","finally","handleReset","layout","scrollToFirstError","onFinish","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlType","type","onClick","_c","$RefreshReg$"],"sources":["/home/alyona/alyona-diplom/src/pages/Anketa/AnketaPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Divider, Form, notification } from \"antd\";\n\nimport ProjectForm from \"./components/ProjectForm\";\nimport Questions from \"./components/Questions\";\nimport { StyledActionsRow } from \"./AnketaPage.styled\";\nimport { requestPostProject } from \"../../api/fetchers\";\n\ninterface IFormValues {\n  packages: string;\n  ecosystem: string;\n  questions: {\n    [key: number]: number;\n  };\n}\n\nconst AnketaPage = () => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [api, contextHolder] = notification.useNotification();\n  const [form] = Form.useForm();\n\n  const onSubmit = (values: IFormValues) => {\n    setLoading(true);\n\n    return requestPostProject({\n      name: Date.now().toString(),\n      userId: 2,\n      packages: values.packages.split(\",\").map((item) => ({ name: item })),\n      ecosystem: values.ecosystem,\n      questuinnaire: Object.entries(values.questions).map(([key, value]) => ({\n        questionId: Number(key),\n        answerId: value,\n      })),\n    })\n      .then(() => {\n        form.resetFields();\n      })\n      .catch(() => {\n        api.error({\n          message: \"Error\",\n          description: \"Something went wrong\",\n        });\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const handleReset = () => {\n    form.resetFields();\n  };\n\n  return (\n    <Form layout=\"vertical\" form={form} scrollToFirstError onFinish={onSubmit}>\n      {contextHolder}\n      <ProjectForm />\n      <Questions />\n      <Divider />\n      <StyledActionsRow>\n        <Button htmlType=\"submit\" type=\"primary\" loading={loading}>\n          Submit Form\n        </Button>\n        <Button onClick={handleReset}>Reset Fields</Button>\n      </StyledActionsRow>\n    </Form>\n  );\n};\n\nexport default AnketaPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}